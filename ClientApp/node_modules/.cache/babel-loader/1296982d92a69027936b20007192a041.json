{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\CIS434_GameChaser\\\\ClientApp\\\\src\\\\components\\\\PopupForm.js\";\nimport React, { useState } from 'react';\nimport { Dialog, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\nimport { Box, Table } from \"@material-ui/core\";\nimport Button from 'react-bootstrap/Button';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    width: 200\n  },\n  label: {\n    textTransform: 'none'\n  }\n}));\nexport function MButton(props) {\n  const {\n    text,\n    size,\n    color,\n    variant,\n    onClick,\n    ...other\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(MuiButton, Object.assign({\n    variant: variant || \"contained\",\n    size: size || \"md\",\n    color: color || \"primary\",\n    onClick: onClick\n  }, other, {\n    classes: {\n      root: classes.root,\n      label: classes.label\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), text);\n}\nconst intV = {\n  Game: '',\n  Name: '',\n  Size: '',\n  Time: '',\n  Notes: ''\n};\nconst {\n  GameInput\n} = {\n  GameInput: 'GameInput'\n};\nexport function insertData(data) {\n  let gName = getData();\n  gName.push(data);\n  localStorage.setItem(GameInput, JSON.stringify(gName));\n}\nexport function Index() {\n  if (localStorage.getItem(GameInput.Index) == null) localStorage.setItem(GameInput.Index, '0');\n  var id = parseInt(localStorage.getItem(GameInput.Index));\n  localStorage.setItem(GameInput.Index, (++id).toString());\n  return id;\n}\nexport function getData() {\n  if (localStorage.getItem(GameInput) == null) localStorage.setItem(GameInput, JSON.stringify([]));\n  return JSON.parse(localStorage.getItem(GameInput));\n}\nexport default function PopupForm() {\n  const [values, setValues] = useState(intV);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    insertData(values);\n    resetForm();\n    handleClose();\n  };\n\n  const resetForm = () => {\n    setValues(intV);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetForm();\n  };\n\n  const [item, setRecords] = useState(getData());\n\n  const TblContainer = props => /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, props.children);\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      'fontFamily': 'ArcadeFont'\n    },\n    variant: \"warning\",\n    size: \"lg\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 14\n    }\n  }, \"New Game\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"New Game\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-size-normal\",\n    label: \"Game\",\n    name: \"Game\",\n    value: values.Game,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-size-small\",\n    size: \"small\",\n    label: \"Name\",\n    name: \"Name\",\n    value: values.Name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Size\",\n    name: \"Size\",\n    value: values.Size,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Time\",\n    name: \"Time\",\n    value: values.Time,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Notes\",\n    name: \"Notes\",\n    value: values.Notes,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MButton, {\n    text: \"Create\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MButton, {\n    text: \"Close\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  })))))));\n}","map":{"version":3,"sources":["D:/React/CIS434_GameChaser/ClientApp/src/components/PopupForm.js"],"names":["React","useState","Dialog","DialogContent","DialogTitle","TextField","Button","MuiButton","makeStyles","Box","Table","useStyles","theme","root","margin","spacing","width","label","textTransform","MButton","props","text","size","color","variant","onClick","other","classes","intV","Game","Name","Size","Time","Notes","GameInput","insertData","data","gName","getData","push","localStorage","setItem","JSON","stringify","Index","getItem","id","parseInt","toString","parse","PopupForm","values","setValues","handleInputChange","e","name","value","target","handleSubmit","preventDefault","resetForm","handleClose","open","setOpen","handleOpen","item","setRecords","TblContainer","table","children"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Dialog, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\n\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\nimport {Box, Table} from \"@material-ui/core\";\r\nimport Button from 'react-bootstrap/Button';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        width:200\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport function MButton(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"md\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n\r\nconst intV = {\r\n    Game:'',\r\n    Name:'',\r\n    Size:'',\r\n    Time:'',\r\n    Notes:'',\r\n}\r\n\r\nconst {GameInput} = {\r\n    GameInput: 'GameInput'\r\n}\r\n\r\nexport function insertData(data) {\r\n    let gName = getData();\r\n    gName.push(data);\r\n    localStorage.setItem(GameInput, JSON.stringify(gName))\r\n}\r\n\r\nexport function Index() {\r\n    if (localStorage.getItem(GameInput.Index) == null)\r\n        localStorage.setItem(GameInput.Index, '0')\r\n    var id = parseInt(localStorage.getItem(GameInput.Index))\r\n    localStorage.setItem(GameInput.Index, (++id).toString())\r\n    return id;\r\n}\r\n\r\n\r\nexport function getData() {\r\n    if (localStorage.getItem(GameInput) == null)\r\n        localStorage.setItem(GameInput, JSON.stringify([]))\r\n    return JSON.parse(localStorage.getItem(GameInput));\r\n}\r\n\r\n\r\nexport default function PopupForm(){\r\n\r\n    const [values, setValues] = useState(intV);\r\n    const handleInputChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n            e.preventDefault()\r\n        insertData(values)\r\n        resetForm()\r\n        handleClose()\r\n    }\r\n\r\n    const resetForm =()=>{\r\n        setValues(intV);\r\n    }\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () =>{\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () =>{\r\n        setOpen(false);\r\n        resetForm()\r\n    };\r\n    const [item, setRecords]= useState(getData());\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n             <Button  style={{'fontFamily':'ArcadeFont'}} variant=\"warning\" size=\"lg\" onClick={handleOpen}>\r\n       New Game\r\n      </Button>\r\n              <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n                  <DialogTitle>New Game</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <Box className={classes.root} onSubmit={handleSubmit}>\r\n                <Box item xs={12}>\r\n                    <TextField\r\n                        id =\"standard-size-normal\"\r\n                        label = \"Game\"\r\n                        name= \"Game\"\r\n                        value={values.Game}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div/>\r\n                    <TextField\r\n                        id =\"standard-size-small\"\r\n                        size = \"small\"\r\n                        label = \"Name\"\r\n                        name= \"Name\"\r\n                        value={values.Name}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div/>\r\n                    <TextField\r\n                        id =\"standard-basic\"\r\n                        label = \"Size\"\r\n                        name= \"Size\"\r\n                        value={values.Size}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div/>\r\n                    <TextField\r\n                        id =\"standard-basic\"\r\n                        label = \"Time\"\r\n                        name= \"Time\"\r\n                        value={values.Time}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div/>\r\n                    <TextField\r\n                        id =\"standard-basic\"\r\n                        label = \"Notes\"\r\n                        name = \"Notes\"\r\n                        value={values.Notes}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div/>\r\n                    <div>\r\n                    <MButton\r\n                text = \"Create\"\r\n                onClick = {handleSubmit}\r\n            />\r\n                    <MButton\r\n                text = \"Close\"\r\n                onClick = {handleClose}\r\n            />\r\n                    </div>\r\n                </Box>\r\n\r\n        </Box>\r\n\r\n\r\n            </DialogContent>\r\n\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}